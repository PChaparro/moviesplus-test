/* prettier-ignore-start */

/* eslint-disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// This file is auto-generated by TanStack Router
import { createFileRoute } from '@tanstack/react-router';

// Import Routes
import { Route as rootRoute } from './routes/__root';
import { Route as IndexImport } from './routes/index';

// Create Virtual Routes

const LoginIndexLazyImport = createFileRoute('/login/')();
const FavoritesIndexLazyImport = createFileRoute('/favorites/')();
const MovieMovieIdLazyImport = createFileRoute('/movie/$movieId')();
const CategoryCategoryIdLazyImport = createFileRoute('/category/$categoryId')();

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const LoginIndexLazyRoute = LoginIndexLazyImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/index.lazy').then((d) => d.Route));

const FavoritesIndexLazyRoute = FavoritesIndexLazyImport.update({
  path: '/favorites/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/favorites/index.lazy').then((d) => d.Route),
);

const MovieMovieIdLazyRoute = MovieMovieIdLazyImport.update({
  path: '/movie/$movieId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/movie/$movieId.lazy').then((d) => d.Route),
);

const CategoryCategoryIdLazyRoute = CategoryCategoryIdLazyImport.update({
  path: '/category/$categoryId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/category/$categoryId.lazy').then((d) => d.Route),
);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/category/$categoryId': {
      preLoaderRoute: typeof CategoryCategoryIdLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/movie/$movieId': {
      preLoaderRoute: typeof MovieMovieIdLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/favorites/': {
      preLoaderRoute: typeof FavoritesIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/login/': {
      preLoaderRoute: typeof LoginIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  CategoryCategoryIdLazyRoute,
  MovieMovieIdLazyRoute,
  FavoritesIndexLazyRoute,
  LoginIndexLazyRoute,
]);

/* prettier-ignore-end */
